name: "Test RPI image as Systemd container"
on:
  push:
    branches:
      - "**"

jobs:
  test-img:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'nextcloud/nextcloudpi'
          ref: devel
      - name: Prepare image
        run: |
          set -e
          wget -O ncp.tar.gz https://github.com/nextcloud/nextcloudpi/releases/download/v1.48.3/NextCloudPi_RPi_07-25-22.tar.gz
          tar xf ncp.tar.gz
          mv NextCloudPi_*.img ncp.img
          source ./build/buildlib.sh
          mount_raspbian ncp.img
          cp /usr/bin/qemu-aarch64-static raspbian_root/usr/bin/
          echo 'Mutex posixsem' >> raspbian_root/etc/apache2/mods-available/ssl.conf

      - name: Run and test container
        run: |
          set -e
          systemd-nspawn --boot -D ./raspbian_root/ -M ncp --hostname=nextcloudpi --private-network \
            -p 80:80 -p 443:443 -p 4443:4443 -p 122:22 &
          
          for i in {1..10}
          do
            iface="$(machinectl shell root@ncp /bin/bash -c "ip r" | grep "default via" | awk '{ print $5 }' | head -1)"
            ip="$(machinectl shell root@ncp /bin/bash -c "ip a show dev '$iface'" | grep global | grep -oP '\d{1,3}(.\d{1,3}){3}' | head -1)"
            curl -k "https://$ip/activate" > /dev/null || continue
          done
          
          curl -k "https://$ip/activate" > /dev/null || {
            echo "Could not reach container. Aborting..."
          }
          
          success=false
          for attempt in {1..3}
          do
            echo ":: Activation Tests (attempt $i/3) ::"
            python tests/activation_tests.py --no-gui "$ip" 443 4443 || {
              echo "Activation test failed!"
              echo "Geckodriver logs:"
              tail -n 20 geckodriver.log >&2 || true
              echo "================"
              echo "ncp.log: "
              machinectl shell ncp /bin/bash -c "tail -n20 /var/log/ncp.log"
              continue
            }
            success=true
            break
          done
          [[ "$success" == "true" ]] || exit 1
          
          success=false
          for attempt in {1..3}
          do
            echo ":: System Tests (attempt $i/3) ::"
            python tests/system_tests.py --non-interactive || {
              echo "System test failed!"
              continue
            }
            success=true
            break
          done
          [[ "$success" == "true" ]] || exit 1
          
          success=false
          for attempt in {1..3}
          do
            echo ":: Nextcloud Tests (attempt $i/3) ::"
            python tests/nextcloud_tests.py --no-gui "$ip" 443 4443 || {
              echo "Nextcloud test failed!"
              echo "Geckodriver logs:"
              tail -n 20 geckodriver.log >&2 || true
              echo "================"
              echo "ncp.log: "
              machinectl shell ncp /bin/bash -c "tail -n20 /var/log/ncp.log"
              continue
            }
            success=true
            break
          done
          
          result=$?
          machinectl terminate ncp || true
          exit "$result"